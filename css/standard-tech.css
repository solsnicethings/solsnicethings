.txt > span { white-space: pre-wrap; font-family: verdana; font-size: 0.87em; }
.txt > span::first-line { font-size: 1.15em; }
.txt > span::before { float: right; width: min(max(16%, min(40em, 25vw)), 25%); height: 15em; content: 'hidden'; visibility: hidden; }

.fixwidth { container-type: inline-size; }
.fixwidth > :first-child { margin: 0; overflow-x: hidden; }
@container (width > 14em) {
	.fixwidth > iframe:first-child  { width: 95cqw; height: 20em; }
	.fixwidth > :first-child  { max-width: 95cqw; margin-left: 3cqw; width: auto; height: auto; }
}

.notImmediatelyCrashed .alonely { display: none; visibility: hidden;  }
.alonely:first-child:last-child { display: block; visibility: visible; }

.loadmsg:empty:not(.alonely), .loadmsg[first]:not([first=""]):not(.alonely), .loadmsg[last]:not([last=""]):not(.alonely) { display: block; }

.loadmsg { border: double 0.4em var(--bordercolor); --bordercolor: rgba(0,0,0,0.4); padding-left: 3em; border-radius: 3%;
background-color: var(--textbc, var(--bc));  color: var(--textfc, var(--fc)); }
.loadmsg::before, .loadmsg::after, [elemtitle]::before { white-space: pre-wrap; }
.loadmsg:empty:not([first])::before { content: "Welcome to Waiting for Something to Load!"; }
.loadmsg::before, [elemtitle]::before { border-bottom: groove 0.2em rgba(255,255,255,0.5); border-radius: 20%; font-weight: bold; }
.loadmsg::after { font-size: 0.65em; padding-left: 1em; font-family: verdana; }
.loadmsg:empty:not([last])::after {
content: "Maybe something went wrong!            What could it be?                Broken CSS? No. The javascript..?\a\a\
YES! It is fantastically bippety boppy and could certainly fail.\a\
Good thing too: all the actual contents are fetched by javascript calls. I... have a system!\a\a\
We still using github pages? Works surprisingly well. Until your IP becomes rate limited because my templating approach requires querying the file lists via a github api.\a\a\
OH! Yes. Don't blindly load these pages a hundred times a day if you know what the github api is and need persistent access to it.\a\a\
There isn't even anything real here yet! It's all... technicalities.\a\a\
So this thing is written to try some programming methods, and aimed at doing most work clientside.\a\a\
Cache/Refreshing: your browser caches separately each file needed by a page: each javascript source, each css, and each page fragment loaded in custom requests.\a\
To really force a refresh, navigate to the path of the specific resource and have your browser refresh that. Possibly with CTRL+F5. Or clear your cache.\a\a\
Still reading? Maybe the thing will never load."; }

.loadmsg[first=""]:empty::before, .loadmsg[last=""]:empty::after { display: none; }
.loadmsg[first]::before, loadmsg[last]::after, .loadmsg:empty::before, .loadmsg:empty::after { display: block; }
.loadmsg[first]::before { content: attr(first); }
.loadmsg[last]::after { content: attr(last); }
[elemtitle]::before { display: block; content: attr(elemtitle); }

p + cite, blockquote + cite { display: block; padding-left: 4em;  border-left: ridge 1.5em; border-radius: 90%; margin-top: 0.5em; margin-bottom: 1.5em; }
p + cite > a:last-child, blockquote + cite > a:last-child { display: block; position: absolute; padding-left: 2em; padding-top: 0.1em; padding-bottom: 0.1em; }

body > label { display: block; }

.embedded .unbed, .embedded > header, .embedded > footer { display: none; }

.pendingsub, .pendingscript, .pendingcontents:empty { display: none !important; visibility: none; position: absolute; }

.concealer:not(:checked):not([input-checked]) ~ :not(footer) { display: none; visibility: hidden; }
.turnOnOnly:checked, .turnOnOnly[input-checked] { display: none; }

.righthalflabel { position: absolute; right: 50vw; text-align: right; }
.righthalflabel + * { padding-left: 51vw; }
.muddled { background-color: rgba(128, 128, 128, 0.3); }
cap {  font-variant: small-caps; }

.helplink { float: right; margin-left: 2em; padding-right: 1.5em; }
.home .gohome { visibility: hidden; }

.clickentrylist > *  { pointer-events: auto; }
.clickentrylist, .clickentrylist * *  { pointer-events: none; }
.clickentrylist, .clickentrylist * {  -webkit-user-select: none; user-select: none; }

.menu { padding-left: 0.6em; padding-right: 0.6em; }
.workspace { width: 98vw; }
.workspace td:first-child { width: 99%; }
.workspace td:not(:first-child) { white-space: nowrap; }

td { vertical-align: top; }

footer > buttons { flex-direction: row-reverse; }
buttons { display: flex; flex-wrap: wrap; }
.menu > *, buttons > * { display: block; margin-bottom: 0.2em; margin-left: 3em; margin-top: 0.2em; margin-right: 3em; text-decoration: none; border-radius: 22%; }
.menu > a, buttons > a { border: 0.1em dashed; padding: 0.2em; }
.menu > :not(a), buttons > :not(a) { border: 0.2em outset; padding-left: 0.7em; padding-right: 0.7em; padding-top: 0.1em; padding-bottom: 0.1em; cursor: pointer; -webkit-user-select: none; user-select: none; }
btn { cursor: pointer; -webkit-user-select: none; user-select: none; }

.active btn[activator],
.active > [activator]:not(btn) > btn:first-of-type {
	display: block; font-size: 1.5em; padding-bottom: 0.2em; padding-left: 1em; padding-right: 5em; border: solid 0.2em rgba(0,0,0,0); border-radius: 0.8em; margin-bottom: 1em;
	
	color: var(--mutedfc);
	background-color: none;
	background: linear-gradient(var(--mutedbc), 90%, var(--enabledfc));
	 font-variant: small-caps;
}

.menu > :not(btn):not(a):not(input) > :not(btn:first-of-type) { display: none; }
.menu:empty { display: none; }

.diagnostic { display: block; padding: 0.1em; border: solid 1px black; margin: 0.2em; white-space: pre-wrap; font-family: monospace; padding-right: 1em; }

iframe { width: 25vw; height: 20vh; }

@media (hover: hover) {
	.diagnostic:not(:hover) { opacity: 0.5; }
}
action { cursor: pointer; white-space: pre-wrap; -webkit-user-select: none; user-select: none; min-width: 1.5em; text-align: center;
/*display: inline-block;
position: relative;
left: 100%;
transform: translateX(-100%);*/
}